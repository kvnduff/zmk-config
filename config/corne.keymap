#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>j

/ {
    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp LS(LC(SPACE))    &kp Q            &kp W             &kp E               &kp R        &kp T              &kp Y           &kp U        &kp I                &kp O              &kp P                     &kp ESCAPE
&mt LEFT_ALT DELETE  &mt LEFT_META A  &mt LEFT_SHIFT S  &mt LEFT_CONTROL D  &lt 1 F      &kp G              &kp H           &lt 1 J      &mt RIGHT_CONTROL K  &mt RIGHT_SHIFT L  &mt RIGHT_META SEMICOLON  &mt RIGHT_ALT BACKSPACE
&kp LS(TAB)          &kp Z            &kp X             &kp C               &kp V        &kp B              &kp N           &kp M        &kp COMMA            &kp DOT            &kp FSLH                  &kp TAB
                                                        &kp LEFT_ARROW      &lt 2 SPACE  &kp RIGHT_ARROW    &kp DOWN_ARROW  &lt 3 ENTER  &kp UP_ARROW
            >;
        };

        symbol {
            bindings = <
&to 5      &kp EXCLAMATION  &kp ASTERISK     &kp HASH           &kp DOLLAR         &kp PERCENT     &kp CARET          &kp AMPERSAND   &kp ASTERISK   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &to 4
&kp LC(K)  &kp GRAVE        &kp TILDE        &kp DOUBLE_QUOTES  &kp APOSTROPHE     &kp PIPE        &kp MINUS          &kp UNDERSCORE  &kp EQUAL      &kp PLUS              &kp COLON              &kp RC(U)
&none      &kp LEFT_BRACE   &kp RIGHT_BRACE  &kp LEFT_BRACKET   &kp RIGHT_BRACKET  &kp CAPSLOCK    &kp K_APPLICATION  &kp BACKSLASH   &kp LESS_THAN  &kp GREATER_THAN      &kp QUESTION           &none
                                             &kp HOME           &none              &kp END         &kp PAGE_DOWN      &none           &kp PAGE_UP
            >;
        };

        number {
            bindings = <
&none         &none          &none           &none             &none  &none    &kp SLASH     &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp MINUS   &none
&kp LEFT_ALT  &kp LEFT_META  &kp LEFT_SHIFT  &kp LEFT_CONTROL  &none  &none    &kp ASTERISK  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp PLUS    &kp BACKSPACE
&none         &none          &none           &none             &none  &none    &kp COMMA     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD  &none
                                             &none             &none  &none    &none         &kp ENTER     &none
            >;
        };

        function {
            bindings = <
&none  &kp F9  &kp F10  &kp F11  &kp F12  &none    &none  &none  &none              &none            &none           &none
&none  &kp F5  &kp F6   &kp F7   &kp F8   &none    &none  &none  &kp RIGHT_CONTROL  &kp RIGHT_SHIFT  &kp RIGHT_META  &kp RIGHT_ALT
&none  &kp F1  &kp F2   &kp F3   &kp F4   &none    &none  &none  &none              &none            &none           &none
                        &none    &none    &none    &none  &none  &none
            >;
        };

        mouse {
            bindings = <
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &to 0
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
                     &none  &none  &none    &none  &none  &none
            >;
        };

        color {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none         &none         &none        &none         &out OUT_TOG  &to 0
&none       &none         &none         &none         &none         &none           &none         &none         &none        &none         &none         &none
&none       &none         &none         &none         &none         &none           &none         &none         &none        &none         &none         &none
                                        &out OUT_USB  &out OUT_BLE  &none           &none         &none         &none
            >;
        };
    };
};
